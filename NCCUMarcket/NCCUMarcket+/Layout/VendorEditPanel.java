// ‚úÖ ‰øÆÊ≠£ÔºöVendorEditPanel ÂàùÂßãÂåñÂ∏∂ÂÖ• stallIdÔºåÈÅøÂÖç Firebase Á©∫ÂØ´ÂÖ•Ôºå‰∏¶Âä†ÂÖ•Ë©ïË´ñÂçÄÔºåÊï¥È´îÂÆπÂô®ÊîπÁÇ∫ ScrollPane ÂèØÊªëÂãïÂÖ®È†Å
package Layout;

import java.awt.*;
import java.awt.event.*;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import javax.swing.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Map;
import java.lang.reflect.Type;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

public class VendorEditPanel extends JPanel {
    public MainFrame frame;
    protected JPanel contentPanel;
    private JScrollPane scrollPane;

    public JButton absoluteBackBtn;
    public JLabel title;
    public JPanel formPanel;
    public JTextField stallIdField;
    public JTextField nameField;
    public JCheckBox eatTag, drinkTag, cultureTag, fashionTag, otherTag;
    public JTextArea promoArea;
    public JTextField contactField;
    public JCheckBox mobilePay;
    public JButton submitBtn;
    public JPanel bottomPanel;
    public JPanel titlePanel;

    public JPanel commentPanel;
    public JLabel commentTitle;

    public VendorEditPanel(MainFrame frame) {
        this.frame = frame;
        setLayout(new BorderLayout());

        // Áî® contentPanel ÂåÖË¶ÜÊâÄÊúâÂÖÉ‰ª∂Ôºå‰∏¶Â§ñÂ±§ÂåÖ ScrollPane
        contentPanel = new JPanel();
        contentPanel.setLayout(null);
        contentPanel.setPreferredSize(new Dimension(400, 900));

        scrollPane = new JScrollPane(contentPanel);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        add(scrollPane, BorderLayout.CENTER);

        title = new JLabel("Êî§Ë≤©Ë≥áÊñôÊõ¥Êñ∞", SwingConstants.CENTER);
        title.setFont(new Font("SansSerif", Font.BOLD, 20));

        formPanel = new JPanel(new GridLayout(0, 2, 10, 10));
        formPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 20, 0));

        stallIdField = new JTextField();
        stallIdField.setEditable(false);
        stallIdField.setText(frame.getSelectedVendorId());

        nameField = new JTextField();
        eatTag = new JCheckBox("Â•ΩÂêÉ");
        drinkTag = new JCheckBox("Â•ΩÂñù");
        cultureTag = new JCheckBox("ÊñáÂâµ");
        fashionTag = new JCheckBox("Á©øÊê≠ÊôÇÂ∞ö");
        otherTag = new JCheckBox("ÂÖ∂‰ªñ");

        promoArea = new JTextArea();
        contactField = new JTextField();
        mobilePay = new JCheckBox("ÊòØÂê¶ÊîØÊè¥Ë°åÂãïÊîØ‰ªò");

        formPanel.add(new JLabel("Êî§‰ΩçÁ∑®ËôüÔºö"));
        formPanel.add(stallIdField);
        formPanel.add(new JLabel("ÂêçÁ®±Ôºö"));
        formPanel.add(nameField);
        formPanel.add(new JLabel("Êî§Ë≤©Ê®ôÁ±§Ôºö"));
        JPanel tagPanel = new JPanel();
        tagPanel.setBounds(10, 60, 360, 200);
        tagPanel.add(eatTag);
        tagPanel.add(drinkTag);
        tagPanel.add(cultureTag);
        tagPanel.add(fashionTag);
        tagPanel.add(otherTag);
        formPanel.add(tagPanel);
        formPanel.add(new JLabel("ÊñáÂÆ£ÂÖßÂÆπ/ÈÄ£ÁµêÔºö"));
        formPanel.add(new JScrollPane(promoArea));
        formPanel.add(new JLabel("ËÅØÁµ°ÊñπÂºèÔºö"));
        formPanel.add(contactField);
        formPanel.add(new JLabel("‰ªòÊ¨æÊñπÂºèÔºö"));
        formPanel.add(mobilePay);

        formPanel.setBounds(10, 60, 360, 400);
        contentPanel.add(formPanel);

        submitBtn = new JButton("Êõ¥Êñ∞Ë≥áÊñô");
        submitBtn.setForeground(Color.BLACK);
        submitBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    String id = stallIdField.getText().trim();
                    if (id.isEmpty()) {
                        JOptionPane.showMessageDialog(VendorEditPanel.this, "ÈåØË™§ÔºöÊâæ‰∏çÂà∞Êî§‰ΩçÁ∑®ËôüÔºÅ");
                        return;
                    }
                    String name = nameField.getText();
                    String description = promoArea.getText();
                    String contact = contactField.getText();
                    boolean supportPay = mobilePay.isSelected();

                    StringBuilder tagsBuilder = new StringBuilder();
                    if (eatTag.isSelected())
                        tagsBuilder.append("Â•ΩÂêÉ ");
                    if (drinkTag.isSelected())
                        tagsBuilder.append("Â•ΩÂñù ");
                    if (cultureTag.isSelected())
                        tagsBuilder.append("ÊñáÂâµ ");
                    if (fashionTag.isSelected())
                        tagsBuilder.append("Á©øÊê≠ÊôÇÂ∞ö ");
                    if (otherTag.isSelected())
                        tagsBuilder.append("ÂÖ∂‰ªñ ");

                    String tags = tagsBuilder.toString().trim();

                    String json = String.format(
                            "{\"record_id\":\"%s\",\"name\":\"%s\",\"tags\":\"%s\",\"description\":\"%s\",\"contact_info\":\"%s\",\"support_mobile_payment\":%b}",
                            id, name, tags, description, contact, supportPay);

                    URL url = new URL("https://nccu-market-default-rtdb.asia-southeast1.firebasedatabase.app/vendors/"
                            + id + ".json");
                    HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                    conn.setRequestMethod("PUT");
                    conn.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
                    conn.setDoOutput(true);

                    try (OutputStream os = conn.getOutputStream()) {
                        byte[] input = json.getBytes(StandardCharsets.UTF_8);
                        os.write(input, 0, input.length);
                    }

                    int responseCode = conn.getResponseCode();
                    if (responseCode == 200) {
                        JOptionPane.showMessageDialog(VendorEditPanel.this, "‚úÖ ÊàêÂäüÊõ¥Êñ∞Ë≥áÊñôÂà∞ FirebaseÔºÅ");
                    } else {
                        JOptionPane.showMessageDialog(VendorEditPanel.this, "‚ùå ÂÇ≥ÈÄÅÂ§±ÊïóÔºåHTTP Code: " + responseCode);
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(VendorEditPanel.this, "üö® ÁôºÁîüÈåØË™§Ôºö" + ex.getMessage());
                }
            }
        });

        bottomPanel = new JPanel();
        bottomPanel.setBounds(10, 470, 360, 40);
        bottomPanel.add(submitBtn);
        contentPanel.add(bottomPanel);

        // üîΩ È°ßÂÆ¢Ë©ïË´ñÈ°ØÁ§∫ÂçÄÔºàÂèñ‰ª£Êñ∞Â¢ûÂçÄÂ°äÔºâ
        commentPanel = new JPanel();
        commentPanel.setLayout(new BoxLayout(commentPanel, BoxLayout.Y_AXIS));
        commentPanel.setBounds(10, 540, 360, 300);
        commentTitle = new JLabel("È°ßÂÆ¢Ë©ïÂÉπ");
        commentPanel.add(commentTitle);
        contentPanel.add(commentPanel);

        // ËÆÄÂèñË©ïË´ñÂçÄÂ°ä
        refreshComments(stallIdField.getText());

        // üîº ËøîÂõûÈçµ
        absoluteBackBtn = new JButton("‚Üê");
        absoluteBackBtn.setBounds(10, 10, 50, 30);
        absoluteBackBtn.addActionListener(e -> {
            clearFields();
            frame.switchTo("Login");
        });
        contentPanel.add(absoluteBackBtn);

        // Ê®ôÈ°å
        titlePanel = new JPanel();
        titlePanel.setBounds(60, 10, 280, 40);
        titlePanel.add(title);
        contentPanel.add(titlePanel);
    }

    public void clearFields() {
        stallIdField.setText("");
        nameField.setText("");
        promoArea.setText("");
        contactField.setText("");
        mobilePay.setSelected(false);
        eatTag.setSelected(false);
        drinkTag.setSelected(false);
        cultureTag.setSelected(false);
        fashionTag.setSelected(false);
        otherTag.setSelected(false);
    }

    public void refresh(String id) {
        try {
            stallIdField.setText(id);
            URL url = new URL(
                    "https://nccu-market-default-rtdb.asia-southeast1.firebasedatabase.app/vendors/" + id + ".json");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Content-Type", "application/json");
            InputStreamReader reader = new InputStreamReader(conn.getInputStream());
            Gson gson = new Gson();
            Type type = new TypeToken<Map<String, Object>>() {
            }.getType();
            Map<String, Object> vendor = gson.fromJson(reader, type);
            reader.close();

            nameField.setText((String) vendor.get("name"));
            contactField.setText((String) vendor.get("contact_info"));
            promoArea.setText((String) vendor.get("description"));
            String tags = (String) vendor.get("tags");
            eatTag.setSelected(tags != null && tags.contains("Â•ΩÂêÉ"));
            drinkTag.setSelected(tags != null && tags.contains("Â•ΩÂñù"));
            cultureTag.setSelected(tags != null && tags.contains("ÊñáÂâµ"));
            fashionTag.setSelected(tags != null && tags.contains("Á©øÊê≠ÊôÇÂ∞ö"));
            otherTag.setSelected(tags != null && tags.contains("ÂÖ∂‰ªñ"));
            Object mobile = vendor.get("support_mobile_payment");
            mobilePay.setSelected(mobile instanceof Boolean && (Boolean) mobile);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "ËÆÄÂèñÂïÜÂÆ∂Ë≥áÊñôÂ§±ÊïóÔºö" + e.getMessage());
        }
        refreshComments(id);
    }

    public void refreshComments(String id) {
        commentPanel.removeAll();
        try {
            URL url = new URL("https://nccu-market-default-rtdb.asia-southeast1.firebasedatabase.app/vendors/" + id
                    + "/comments.json");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Content-Type", "application/json");

            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            Gson gson = new Gson();
            java.lang.reflect.Type type = new TypeToken<Map<String, Map<String, Object>>>() {
            }.getType();
            Map<String, Map<String, Object>> comments = gson.fromJson(reader, type);
            reader.close();

            if (comments != null) {
                for (Map<String, Object> entry : comments.values()) {
                    String text = (String) entry.get("comment");
                    String name = (String) entry.get("name");
                    JTextArea area = new JTextArea("üë§ " + name + "Ôºö" + text, 2, 28);
                    area.setMaximumSize(new Dimension(Integer.MAX_VALUE, 60));
                    area.setLineWrap(true);
                    area.setWrapStyleWord(true);
                    area.setEditable(false);
                    area.setBackground(new Color(245, 245, 245));
                    area.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
                    commentPanel.add(Box.createVerticalStrut(1));
                    commentPanel.add(area);
                }
            } else {
                commentPanel.add(new JLabel("ÁõÆÂâçÂ∞öÁÑ°Ë©ïË´ñ"));
            }
            commentPanel.revalidate();
            commentPanel.repaint();
        } catch (Exception e) {
            e.printStackTrace();
            commentPanel.add(new JLabel("ËÆÄÂèñË©ïË´ñÂ§±ÊïóÔºö" + e.getMessage()));
        }
    }
}
